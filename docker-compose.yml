version: '3.7'

services:
  backend:
    restart: always
    build: 
      context: ./backend 
      dockerfile: Dockerfile
    command: gunicorn todo.config.wsgi --bind 0.0.0.0:8000
    ports:
      - 8000:8000
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - SQL_ENGINE=${SQL_ENGINE}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - SQL_DATABASE=${SQL_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - DATABASE=${DATABASE}
    depends_on:
      - db
    networks:
      - main

  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: tail -f /dev/null
    volumes:
      - build_folder:/frontend/dist
    networks:
      - main

  nginx:
    build: ./nginx
    ports:
      - 8080:80
    volumes:
      - build_folder:/var/www/frontend:ro
    depends_on:
      - backend
      - frontend
    networks:
      - main

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    networks:
      - main

  # traefik:
  #   image: "traefik:v2.3"
  #   container_name: "traefik"

volumes:
  build_folder:
  postgres_data:

networks:
  main: